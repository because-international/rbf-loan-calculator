{"ast":null,"code":"var _jsxFileName = \"/Users/nateritter/Sites/because-loan-calculator/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { calculateSolvedValue, formatValue, getMonthlyPayment, getRepaymentYears, getEffectiveAnnualRate } from './calculator.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RBFCalculator = () => {\n  _s();\n  // Helper function to determine color class based on factor rate\n  const getFactorRateColorClass = factorRate => {\n    return factorRate <= 1 ? 'text-red-600 font-bold' : 'text-gray-800';\n  };\n  const [values, setValues] = useState({\n    factorRate: 1.5,\n    amountReceived: 5000,\n    revenueShareRate: 5,\n    repaymentPeriod: 24,\n    profitMargin: 16,\n    annualRevenue: 22000\n  });\n  const [solveFor, setSolveFor] = useState('repaymentPeriod');\n\n  // Derived values that are always calculated\n  const derivedValues = {\n    repaymentObligation: values.amountReceived * values.factorRate,\n    costOfCapital: values.amountReceived * values.factorRate - values.amountReceived\n  };\n\n  // All variables for display purposes\n  const variables = {\n    factorRate: {\n      label: 'Factor Rate (multiplier)',\n      suffix: 'x',\n      step: 0.1\n    },\n    amountReceived: {\n      label: 'Amount Received',\n      prefix: '$',\n      step: 100\n    },\n    repaymentObligation: {\n      label: 'Repayment Obligation',\n      prefix: '$',\n      step: 100\n    },\n    costOfCapital: {\n      label: 'Cost of Capital',\n      prefix: '$',\n      step: 100\n    },\n    revenueShareRate: {\n      label: 'Revenue Share Rate',\n      suffix: '%',\n      step: 0.5\n    },\n    repaymentPeriod: {\n      label: 'Repayment Period',\n      suffix: ' months',\n      step: 1\n    },\n    profitMargin: {\n      label: 'Annual Profit Margin',\n      suffix: '%',\n      step: 1\n    },\n    annualRevenue: {\n      label: 'Annual Revenue',\n      prefix: '$',\n      step: 1000\n    }\n  };\n\n  // Variables that can be solved for (excluding derived values)\n  const solvableVariables = {\n    factorRate: {\n      label: 'Factor Rate (multiplier)',\n      suffix: 'x',\n      step: 0.1\n    },\n    amountReceived: {\n      label: 'Amount Received',\n      prefix: '$',\n      step: 100\n    },\n    revenueShareRate: {\n      label: 'Revenue Share Rate',\n      suffix: '%',\n      step: 0.5\n    },\n    repaymentPeriod: {\n      label: 'Repayment Period',\n      suffix: ' months',\n      step: 1\n    },\n    profitMargin: {\n      label: 'Annual Profit Margin',\n      suffix: '%',\n      step: 1\n    },\n    annualRevenue: {\n      label: 'Annual Revenue',\n      prefix: '$',\n      step: 1000\n    }\n  };\n  const handleInputChange = (key, newValue) => {\n    setValues(prev => ({\n      ...prev,\n      [key]: parseFloat(newValue) || 0\n    }));\n  };\n  const handleSolveForChange = newSolveFor => {\n    setSolveFor(newSolveFor);\n  };\n\n  // Combine state values with derived values for calculations\n  const calculationValues = {\n    ...values,\n    ...derivedValues\n  };\n  const solvedValue = calculateSolvedValue(calculationValues, solveFor);\n\n  // Update the solved value in our state for consistency\n  useEffect(() => {\n    // Only update state for solvable variables, not derived values\n    if (solvableVariables[solveFor]) {\n      setValues(prev => ({\n        ...prev,\n        [solveFor]: solvedValue\n      }));\n    }\n  }, [solveFor, solvedValue]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4 sm:px-6 lg:px-8\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-4xl mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white rounded-2xl shadow-xl overflow-hidden\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gradient-to-r from-blue-600 to-indigo-700 p-6 text-white\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"text-3xl font-bold text-center\",\n            children: \"Revenue Based Finance Calculator\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-center mt-2 opacity-90\",\n            children: \"Calculate RBF loan terms and payments\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mb-8 p-6 bg-blue-50 rounded-xl border border-blue-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"solveForSelect\",\n              className: \"block text-lg font-medium text-gray-700 mb-3\",\n              children: \"What would you like to solve for?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"solveForSelect\",\n              value: solveFor,\n              onChange: e => handleSolveForChange(e.target.value),\n              className: \"w-full p-3 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n              children: Object.entries(solvableVariables).map(([key, variable]) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: key,\n                children: variable.label\n              }, key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\",\n            children: Object.entries(variables).map(([key, variable]) => {\n              // Determine if this is a derived value (always calculated)\n              const isDerivedValue = key === 'repaymentObligation' || key === 'costOfCapital';\n              // Determine if this is the currently solved value\n              const isSolvedValue = key === solveFor;\n\n              // For derived values, we always show them as calculated\n              // For other values, follow the existing logic\n              const showAsCalculated = isDerivedValue || isSolvedValue;\n\n              // For derived values, use the derived value; for others, use state value or solved value\n              const displayValue = isDerivedValue ? derivedValues[key] : isSolvedValue ? solvedValue : values[key];\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: `p-4 rounded-lg border-2 transition-all duration-200 ${isSolvedValue ? key === 'factorRate' && values.factorRate <= 1 ? 'bg-red-50 border-red-300 shadow-md' : 'bg-green-50 border-green-300 shadow-md' : 'bg-gray-50 border-gray-200'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"flex justify-between items-start mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    htmlFor: showAsCalculated ? `calculated-${key}` : `input-${key}`,\n                    className: \"font-medium text-gray-700\",\n                    children: variable.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 126,\n                    columnNumber: 23\n                  }, this), isSolvedValue && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: `${key === 'factorRate' && values.factorRate <= 1 ? 'bg-red-500' : 'bg-green-500'} text-white text-xs px-2 py-1 rounded-full`,\n                    children: \"CALCULATED\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 125,\n                  columnNumber: 21\n                }, this), showAsCalculated ? /*#__PURE__*/_jsxDEV(\"div\", {\n                  id: `calculated-${key}`,\n                  className: \"text-2xl font-bold text-gray-800\",\n                  role: \"status\",\n                  \"aria-live\": \"polite\",\n                  \"data-testid\": `calculated-${key}`,\n                  children: formatValue(key, displayValue)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n                  id: `input-${key}`,\n                  type: \"number\",\n                  value: values[key],\n                  onChange: e => handleInputChange(key, e.target.value),\n                  step: variable.step,\n                  className: \"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 23\n                }, this)]\n              }, key, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-gradient-to-r from-gray-50 to-gray-100 p-6 rounded-xl border border-gray-200\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"text-xl font-bold text-gray-800 mb-4\",\n              children: \"Loan Summary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white p-4 rounded-lg shadow-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-1\",\n                  children: \"Monthly Payment\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xl font-bold text-gray-800\",\n                  children: [\"$\", getMonthlyPayment(values).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white p-4 rounded-lg shadow-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-1\",\n                  children: \"Repayment Period\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xl font-bold text-gray-800\",\n                  children: [getRepaymentYears(calculationValues.repaymentPeriod), \" years\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"bg-white p-4 rounded-lg shadow-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-sm text-gray-500 mb-1\",\n                  children: \"Total Cost of Capital\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-xl font-bold text-gray-800\",\n                  children: [\"$\", derivedValues.costOfCapital.toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bg-blue-50 p-4 rounded-lg\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"font-bold text-gray-800 mb-2\",\n                children: \"Calculation Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"list-disc pl-5 space-y-1 text-gray-700\",\n                children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Monthly Revenue: $\", (values.annualRevenue / 12).toFixed(2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Monthly Payment: \", values.revenueShareRate, \"% of monthly revenue\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Factor Rate: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: getFactorRateColorClass(values.factorRate),\n                    children: formatValue('factorRate', values.factorRate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 36\n                  }, this), \"x (pay back \", /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: getFactorRateColorClass(values.factorRate),\n                    children: formatValue('factorRate', values.factorRate)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 200,\n                    columnNumber: 162\n                  }, this), \"x borrowed amount)\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: [\"Effective Annual Rate: \", (getEffectiveAnnualRate(calculationValues.factorRate, calculationValues.repaymentPeriod) || 0).toFixed(1), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-50 p-6 border-t border-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"font-bold text-gray-800 mb-2\",\n            children: \"How to Use:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-gray-600\",\n            children: \"Select the variable you want to calculate from the dropdown above, then enter values for all other fields. The calculator will automatically compute your selected variable and show a detailed summary below.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(RBFCalculator, \"EdkcM9HTaqtte+Fk2Z98dz6D5ig=\");\n_c = RBFCalculator;\nexport default RBFCalculator;\nvar _c;\n$RefreshReg$(_c, \"RBFCalculator\");","map":{"version":3,"names":["React","useState","useEffect","calculateSolvedValue","formatValue","getMonthlyPayment","getRepaymentYears","getEffectiveAnnualRate","jsxDEV","_jsxDEV","RBFCalculator","_s","getFactorRateColorClass","factorRate","values","setValues","amountReceived","revenueShareRate","repaymentPeriod","profitMargin","annualRevenue","solveFor","setSolveFor","derivedValues","repaymentObligation","costOfCapital","variables","label","suffix","step","prefix","solvableVariables","handleInputChange","key","newValue","prev","parseFloat","handleSolveForChange","newSolveFor","calculationValues","solvedValue","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","value","onChange","e","target","Object","entries","map","variable","isDerivedValue","isSolvedValue","showAsCalculated","displayValue","role","type","toFixed","_c","$RefreshReg$"],"sources":["/Users/nateritter/Sites/because-loan-calculator/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { calculateSolvedValue, formatValue, getMonthlyPayment, getRepaymentYears, getEffectiveAnnualRate } from './calculator.js';\n\nconst RBFCalculator = () => {\n  // Helper function to determine color class based on factor rate\n  const getFactorRateColorClass = (factorRate) => {\n    return factorRate <= 1 ? 'text-red-600 font-bold' : 'text-gray-800';\n  };\n\n  const [values, setValues] = useState({\n    factorRate: 1.5,\n    amountReceived: 5000,\n    revenueShareRate: 5,\n    repaymentPeriod: 24,\n    profitMargin: 16,\n    annualRevenue: 22000\n  });\n\n  const [solveFor, setSolveFor] = useState('repaymentPeriod');\n\n  // Derived values that are always calculated\n  const derivedValues = {\n    repaymentObligation: values.amountReceived * values.factorRate,\n    costOfCapital: (values.amountReceived * values.factorRate) - values.amountReceived\n  };\n\n  // All variables for display purposes\n  const variables = {\n    factorRate: { label: 'Factor Rate (multiplier)', suffix: 'x', step: 0.1 },\n    amountReceived: { label: 'Amount Received', prefix: '$', step: 100 },\n    repaymentObligation: { label: 'Repayment Obligation', prefix: '$', step: 100 },\n    costOfCapital: { label: 'Cost of Capital', prefix: '$', step: 100 },\n    revenueShareRate: { label: 'Revenue Share Rate', suffix: '%', step: 0.5 },\n    repaymentPeriod: { label: 'Repayment Period', suffix: ' months', step: 1 },\n    profitMargin: { label: 'Annual Profit Margin', suffix: '%', step: 1 },\n    annualRevenue: { label: 'Annual Revenue', prefix: '$', step: 1000 }\n  };\n\n  // Variables that can be solved for (excluding derived values)\n  const solvableVariables = {\n    factorRate: { label: 'Factor Rate (multiplier)', suffix: 'x', step: 0.1 },\n    amountReceived: { label: 'Amount Received', prefix: '$', step: 100 },\n    revenueShareRate: { label: 'Revenue Share Rate', suffix: '%', step: 0.5 },\n    repaymentPeriod: { label: 'Repayment Period', suffix: ' months', step: 1 },\n    profitMargin: { label: 'Annual Profit Margin', suffix: '%', step: 1 },\n    annualRevenue: { label: 'Annual Revenue', prefix: '$', step: 1000 }\n  };\n\n  const handleInputChange = (key, newValue) => {\n    setValues(prev => ({\n      ...prev,\n      [key]: parseFloat(newValue) || 0\n    }));\n  };\n\n  const handleSolveForChange = (newSolveFor) => {\n    setSolveFor(newSolveFor);\n  };\n\n  // Combine state values with derived values for calculations\n  const calculationValues = { ...values, ...derivedValues };\n  const solvedValue = calculateSolvedValue(calculationValues, solveFor);\n\n  // Update the solved value in our state for consistency\n  useEffect(() => {\n    // Only update state for solvable variables, not derived values\n    if (solvableVariables[solveFor]) {\n      setValues(prev => ({\n        ...prev,\n        [solveFor]: solvedValue\n      }));\n    }\n  }, [solveFor, solvedValue]);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-blue-50 to-indigo-100 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-4xl mx-auto\">\n        <div className=\"bg-white rounded-2xl shadow-xl overflow-hidden\">\n          <div className=\"bg-gradient-to-r from-blue-600 to-indigo-700 p-6 text-white\">\n            <h1 className=\"text-3xl font-bold text-center\">Revenue Based Finance Calculator</h1>\n            <p className=\"text-center mt-2 opacity-90\">Calculate RBF loan terms and payments</p>\n          </div>\n\n          <div className=\"p-6\">\n            {/* Solve For Selection */}\n            <div className=\"mb-8 p-6 bg-blue-50 rounded-xl border border-blue-100\">\n              <label htmlFor=\"solveForSelect\" className=\"block text-lg font-medium text-gray-700 mb-3\">\n                What would you like to solve for?\n              </label>\n              <select\n                id=\"solveForSelect\"\n                value={solveFor}\n                onChange={(e) => handleSolveForChange(e.target.value)}\n                className=\"w-full p-3 border border-gray-300 rounded-lg text-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n              >\n                {Object.entries(solvableVariables).map(([key, variable]) => (\n                  <option key={key} value={key}>\n                    {variable.label}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Input Grid */}\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6 mb-8\">\n              {Object.entries(variables).map(([key, variable]) => {\n                // Determine if this is a derived value (always calculated)\n                const isDerivedValue = key === 'repaymentObligation' || key === 'costOfCapital';\n                // Determine if this is the currently solved value\n                const isSolvedValue = key === solveFor;\n\n                // For derived values, we always show them as calculated\n                // For other values, follow the existing logic\n                const showAsCalculated = isDerivedValue || isSolvedValue;\n\n                // For derived values, use the derived value; for others, use state value or solved value\n                const displayValue = isDerivedValue\n                  ? derivedValues[key]\n                  : (isSolvedValue ? solvedValue : values[key]);\n\n                return (\n                  <div key={key} className={`p-4 rounded-lg border-2 transition-all duration-200 ${\n                    isSolvedValue ? (key === 'factorRate' && values.factorRate <= 1 ? 'bg-red-50 border-red-300 shadow-md' : 'bg-green-50 border-green-300 shadow-md') : 'bg-gray-50 border-gray-200'\n                  }`}>\n                    <div className=\"flex justify-between items-start mb-2\">\n                      <label\n                        htmlFor={showAsCalculated ? `calculated-${key}` : `input-${key}`}\n                        className=\"font-medium text-gray-700\"\n                      >\n                        {variable.label}\n                      </label>\n                      {isSolvedValue && (\n                        <span className={`${\n                          key === 'factorRate' && values.factorRate <= 1\n                            ? 'bg-red-500'\n                            : 'bg-green-500'\n                        } text-white text-xs px-2 py-1 rounded-full`}>\n                          CALCULATED\n                        </span>\n                      )}\n                    </div>\n\n                    {showAsCalculated ? (\n                      <div\n                        id={`calculated-${key}`}\n                        className=\"text-2xl font-bold text-gray-800\"\n                        role=\"status\"\n                        aria-live=\"polite\"\n                        data-testid={`calculated-${key}`}\n                      >\n                        {formatValue(key, displayValue)}\n                      </div>\n                    ) : (\n                      <input\n                        id={`input-${key}`}\n                        type=\"number\"\n                        value={values[key]}\n                        onChange={(e) => handleInputChange(key, e.target.value)}\n                        step={variable.step}\n                        className=\"w-full p-3 border border-gray-300 rounded focus:ring-2 focus:ring-blue-500 focus:border-blue-500 transition-colors duration-200\"\n                      />\n                    )}\n                  </div>\n                );\n              })}\n            </div>\n\n            {/* Summary Information */}\n            <div className=\"bg-gradient-to-r from-gray-50 to-gray-100 p-6 rounded-xl border border-gray-200\">\n              <h2 className=\"text-xl font-bold text-gray-800 mb-4\">Loan Summary</h2>\n\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4 mb-6\">\n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                  <div className=\"text-sm text-gray-500 mb-1\">Monthly Payment</div>\n                  <div className=\"text-xl font-bold text-gray-800\">\n                    ${getMonthlyPayment(values).toFixed(2)}\n                  </div>\n                </div>\n\n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                  <div className=\"text-sm text-gray-500 mb-1\">Repayment Period</div>\n                  <div className=\"text-xl font-bold text-gray-800\">\n                    {getRepaymentYears(calculationValues.repaymentPeriod)} years\n                  </div>\n                </div>\n\n                <div className=\"bg-white p-4 rounded-lg shadow-sm\">\n                  <div className=\"text-sm text-gray-500 mb-1\">Total Cost of Capital</div>\n                  <div className=\"text-xl font-bold text-gray-800\">\n                    ${derivedValues.costOfCapital.toFixed(2)}\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"bg-blue-50 p-4 rounded-lg\">\n                <h3 className=\"font-bold text-gray-800 mb-2\">Calculation Details:</h3>\n                <ul className=\"list-disc pl-5 space-y-1 text-gray-700\">\n                  <li>Monthly Revenue: ${(values.annualRevenue / 12).toFixed(2)}</li>\n                  <li>Monthly Payment: {values.revenueShareRate}% of monthly revenue</li>\n                  <li>Factor Rate: <span className={getFactorRateColorClass(values.factorRate)}>{formatValue('factorRate', values.factorRate)}</span>x (pay back <span className={getFactorRateColorClass(values.factorRate)}>{formatValue('factorRate', values.factorRate)}</span>x borrowed amount)</li>\n                  <li>Effective Annual Rate: {(getEffectiveAnnualRate(calculationValues.factorRate, calculationValues.repaymentPeriod) || 0).toFixed(1)}%</li>\n                </ul>\n              </div>\n            </div>\n          </div>\n\n          {/* Additional Info */}\n          <div className=\"bg-gray-50 p-6 border-t border-gray-200\">\n            <h3 className=\"font-bold text-gray-800 mb-2\">How to Use:</h3>\n            <p className=\"text-gray-600\">\n              Select the variable you want to calculate from the dropdown above, then enter values for all other fields.\n              The calculator will automatically compute your selected variable and show a detailed summary below.\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default RBFCalculator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}